---
apiVersion: v1
kind: Namespace
metadata:
  name: gpu-operator
  namespace: kube-system

---
apiVersion: v1
kind: Namespace
metadata:
  name: gpu-operator-resources
  namespace: kube-system

---
apiVersion: v1
kind: Namespace
metadata:
  name: node-feature-discovery
  namespace: kube-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfd-master
  namespace: node-feature-discovery

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfd-master
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - patch
  - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfd-master
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfd-master
subjects:
- kind: ServiceAccount
  name: nfd-master
  namespace: node-feature-discovery

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: nfd-master
  name: nfd-master
  namespace: node-feature-discovery
spec:
  selector:
    matchLabels:
      app: nfd-master
  template:
    metadata:
      labels:
        app: nfd-master
    spec:
      containers:
      - command:
        - nfd-master
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: quay.io/kubernetes_incubator/node-feature-discovery:v0.4.0
        name: nfd-master
      nodeSelector:
        node-role.kubernetes.io/master: ""
      serviceAccount: nfd-master
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
        value: ""

---
apiVersion: v1
kind: Service
metadata:
  name: nfd-master
  namespace: node-feature-discovery
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: nfd-master
  type: ClusterIP

---
apiVersion: v1
data:
  dcgmExporter: nvidia/dcgm-exporter:1.0.0-beta-ubuntu18.04
  dcgmPodExporter: nvidia/pod-gpu-metrics-exporter:v1.0.0-alpha
  devicePlugin: nvidia/k8s-device-plugin:1.0.0-beta4
  driver: nvidia/driver:440.33.01
  toolkit: nvidia/container-toolkit:1.0.0-alpha.3
  unsupported: openshift
kind: ConfigMap
metadata:
  name: operator-config
  namespace: gpu-operator

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: special-resource-operator
  namespace: gpu-operator

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfd-worker
  namespace: node-feature-discovery

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfd-worker
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - patch
  - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfd-worker
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfd-worker
subjects:
- kind: ServiceAccount
  name: nfd-worker
  namespace: node-feature-discovery

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: nfd-worker
  name: nfd-worker
  namespace: node-feature-discovery
spec:
  selector:
    matchLabels:
      app: nfd-worker
  template:
    metadata:
      labels:
        app: nfd-worker
    spec:
      containers:
      - args:
        - --sleep-interval=60s
        - --server=nfd-master:8080
        - '--options={"sources": {"pci": { "deviceLabelFields": ["vendor"] }}}'
        command:
        - nfd-worker
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: quay.io/kubernetes_incubator/node-feature-discovery:v0.4.0
        name: nfd-worker
        volumeMounts:
        - mountPath: /host-boot
          name: host-boot
          readOnly: true
        - mountPath: /host-etc/os-release
          name: host-os-release
          readOnly: true
        - mountPath: /host-sys
          name: host-sys
        - mountPath: /etc/kubernetes/node-feature-discovery/source.d/
          name: source-d
        - mountPath: /etc/kubernetes/node-feature-discovery/features.d/
          name: features-d
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: nfd-worker
      volumes:
      - hostPath:
          path: /boot
        name: host-boot
      - hostPath:
          path: /etc/os-release
        name: host-os-release
      - hostPath:
          path: /sys
        name: host-sys
      - hostPath:
          path: /etc/kubernetes/node-feature-discovery/source.d/
        name: source-d
      - hostPath:
          path: /etc/kubernetes/node-feature-discovery/features.d/
        name: features-d

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: specialresources.sro.openshift.io
  namespace: kube-system
spec:
  group: sro.openshift.io
  names:
    kind: SpecialResource
    listKind: SpecialResourceList
    plural: specialresources
    singular: specialresource
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: special-resource-operator
  namespace: kube-system
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - serviceaccounts
  - nodes
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - list
  - create
  - watch
- apiGroups:
  - sro.openshift.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
  - create

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: special-resource-operator
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: special-resource-operator
subjects:
- kind: ServiceAccount
  name: special-resource-operator
  namespace: gpu-operator

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: special-resource-operator
  namespace: gpu-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: special-resource-operator
  template:
    metadata:
      annotations:
        openshift.io/scc: restricted-readonly
      labels:
        name: special-resource-operator
    spec:
      containers:
      - command:
        - gpu-operator
        env:
        - name: NVIDIA_DRIVER
          valueFrom:
            configMapKeyRef:
              key: driver
              name: operator-config
        - name: NVIDIA_TOOLKIT_DEFAULT_RUNTIME
          value: docker
        - name: NVIDIA_TOOLKIT
          valueFrom:
            configMapKeyRef:
              key: toolkit
              name: operator-config
        - name: NVIDIA_DEVICE_PLUGIN
          valueFrom:
            configMapKeyRef:
              key: devicePlugin
              name: operator-config
        - name: NVIDIA_DCGM_EXPORTER
          valueFrom:
            configMapKeyRef:
              key: dcgmExporter
              name: operator-config
        - name: NVIDIA_DCGM_POD_EXPORTER
          valueFrom:
            configMapKeyRef:
              key: dcgmPodExporter
              name: operator-config
        - name: KUBE_UNSUPPORTED_FLAVOR
          valueFrom:
            configMapKeyRef:
              key: unsupported
              name: operator-config
        - name: WATCH_NAMESPACE
          value: ""
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: special-resource-operator
        image: nvidia/gpu-operator:1.0.0
        imagePullPolicy: IfNotPresent
        name: special-resource-operator
        ports:
        - containerPort: 60000
          name: metrics
        readinessProbe:
          exec:
            command:
            - stat
            - /tmp/operator-sdk-ready
          failureThreshold: 1
          initialDelaySeconds: 4
          periodSeconds: 10
      nodeSelector:
        node-role.kubernetes.io/master: ""
      serviceAccount: special-resource-operator
      serviceAccountName: special-resource-operator
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
        value: ""
