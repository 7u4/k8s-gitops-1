apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: default
  annotations:
    flux.weave.works/automated: "true"
    flux.weave.works/tag.alertmanager: glob:v0.15.*
    flux.weave.works/tag.configmapReload: glob:v0.2.*
    flux.weave.works/tag.nodeExporter: glob:v0.17.*
    flux.weave.works/tag.server: glob:v2.6.*
    flux.weave.works/tag.pushgateway: glob:v0.6.*
spec:
  releaseName: prometheus
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus
    version: 8.4.8
  values:
    alertmanager:
      image:
        repository: prom/alertmanager
        tag: v0.15.3
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          #ingress.kubernetes.io/auth-type: "forward"
          #ingress.kubernetes.io/auth-url: "http://auth0-forwardauth.kube-system.svc.cluster.local/authorize"
          #ingress.kubernetes.io/auth-trust-headers: "true"
      persistentVolume:
        enabled: true
        storageClass: "slow-disks"
    configmapReload:
      image:
        repository: jimmidyson/configmap-reload
        tag: v0.2.2
    nodeExporter:
      image:
        repository: prom/node-exporter
        tag: v0.17.0
    server:
      image:
        repository: prom/prometheus
        tag: v2.6.1
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          #ingress.kubernetes.io/auth-type: "forward"
          #ingress.kubernetes.io/auth-url: "http://auth0-forwardauth.kube-system.svc.cluster.local/authorize"
          #ingress.kubernetes.io/auth-trust-headers: "true"
      persistentVolume:
        enabled: true
        storageClass: "slow-disks"
        size: 30Gi
    pushgateway:
      image:
        repository: prom/pushgateway
        tag: v0.6.0
    serverFiles:
      prometheus.yml:
        scrape_configs:
          - job_name: prometheus
            static_configs:
              - targets:
                  - localhost:9090
          - job_name: "kubernetes-apiservers"
            kubernetes_sd_configs:
              - role: endpoints
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            relabel_configs:
              - source_labels:
                  [
                    __meta_kubernetes_namespace,
                    __meta_kubernetes_service_name,
                    __meta_kubernetes_endpoint_port_name,
                  ]
                action: keep
                regex: default;kubernetes;https
          - job_name: "kubernetes-nodes"
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
              - role: node
            relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)
              - target_label: __address__
                replacement: kubernetes.default.svc:443
              - source_labels: [__meta_kubernetes_node_name]
                regex: (.+)
                target_label: __metrics_path__
                replacement: /api/v1/nodes/${1}/proxy/metrics
          - job_name: "kubernetes-nodes-cadvisor"
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
              - role: node
            relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)
              - target_label: __address__
                replacement: kubernetes.default.svc:443
              - source_labels: [__meta_kubernetes_node_name]
                regex: (.+)
                target_label: __metrics_path__
                replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
          - job_name: "kubernetes-service-endpoints"
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                action: replace
                target_label: __scheme__
                regex: (https?)
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels:
                  [
                    __address__,
                    __meta_kubernetes_service_annotation_prometheus_io_port,
                  ]
                action: replace
                target_label: __address__
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $1:$2
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: kubernetes_name
          - job_name: "prometheus-pushgateway"
            honor_labels: true
            kubernetes_sd_configs:
              - role: service
            relabel_configs:
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_probe]
                action: keep
                regex: pushgateway
          - job_name: "kubernetes-services"
            metrics_path: /probe
            params:
              module: [http_2xx]
            kubernetes_sd_configs:
              - role: service
            relabel_configs:
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_probe]
                action: keep
                regex: true
              - source_labels: [__address__]
                target_label: __param_target
              - target_label: __address__
                replacement: blackbox
              - source_labels: [__param_target]
                target_label: instance
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_service_name]
                target_label: kubernetes_name
          - job_name: "kubernetes-pods"
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels:
                  [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels:
                  [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels:
                  [
                    __address__,
                    __meta_kubernetes_pod_annotation_prometheus_io_port,
                  ]
                action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $1:$2
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: kubernetes_namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: kubernetes_pod_name
          # - job_name: "netdata-scrape"
          #   metrics_path: "/api/v1/allmetrics"
          #   params:
          #     # format: prometheus | prometheus_all_hosts
          #     # You can use `prometheus_all_hosts` if you want Prometheus to set the `instance` to your hostname instead of IP
          #     format: [prometheus]
          #   honor_labels: true
          #   static_configs:
          #     - targets:
          #         - proxmox:19999
          #         - proxmox-b:19999
          #         - proxmox-c:19999
          #         - lb:19999
          #         - pihole:19999
          #         - k8s-master-a:19999
          #         - k8s-master-b:19999
          #         - k8s-master-c:19999
          #         - k8s-1:19999
          #         - k8s-2:19999
          #         - k8s-3:19999
          - job_name: "stash-scrape"
            metrics_path: "/metrics"
            params:
              format: [prometheus]
            honor_labels: true
            static_configs:
              - targets:
                  - stash.kube-system:56789
          # - job_name: "wmi-exporter-scrape"
          #   metrics_path: "/metrics"
          #   params:
          #     format: [prometheus]
          #   honor_labels: true
          #   static_configs:
          #     - targets:
          #         - nvr:9182
  valueFileSecrets:
    - name: "prometheus-values"
